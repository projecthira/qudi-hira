# ==============================================
#  qudi-hira configuration file for Project Hira
# ==============================================

global:
    # list of modules to load when starting
    startup: ['man', 'tray', 'countergui', 'lasergui', 'pixelcounterlogic']

    module_server:
        address: 'localhost'
        port: 12345

    # For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

hardware:
    nicard:
        module.Class: 'national_instruments_x_series.NationalInstrumentsXSeries'
        photon_sources:
            - '/Dev1/PFI0'
        clock_channel: '/Dev1/Ctr0'
        default_clock_frequency: 100 # optional, in Hz
        counter_channels:
            - '/Dev1/Ctr1'
        counter_ai_channels:
            - '/Dev1/AI0'
        default_scanner_clock_frequency: 100 # optional, in Hz
        scanner_clock_channel: '/Dev1/Ctr2'
        odmr_trigger_channel: '/Dev1/PFI12'
        pixel_clock_channel: '/Dev1/PFI6'
        counting_edge_rising: True
        gate_in_channel: '/Dev1/PFI13'
        scanner_ao_channels:
            - '/Dev1/AO0'
            - '/Dev1/AO1'
            - '/Dev1/AO2'
            - '/Dev1/AO3'
        scanner_ai_channels:
            - '/Dev1/AI1'
        scanner_counter_channels:
            - '/Dev1/Ctr3'
        scanner_voltage_ranges:
            - [-10, 10]
            - [-10, 10]
            - [-10, 10]
            - [-10, 10]
        scanner_position_ranges:
            - [ 0e-6, 200e-6 ]
            - [ 0e-6, 200e-6 ]
            - [ -100e-6, 100e-6 ]
            - [ -10, 10 ]

    timetagger_fastcounter:
        module.Class: 'swabian_instruments.timetagger_fast_counter.TimeTaggerFastCounter'
        timetagger_channel_apd_0: 0
        timetagger_channel_apd_1: 1
        timetagger_channel_start: 4
        timetagger_channel_next: 5
        timetagger_sum_channels: True

    timetagger_count_between_markers:
        module.Class: 'swabian_instruments.timetagger_between_markers.TimeTagger_CountBetweenMarkers'
        timetagger_channel_apd_0: 0
        timetagger_channel_apd_1: 1
        timetagger_channel_start: 6
        timetagger_channel_end: 7
        timetagger_channel_detect: 4
        timetagger_channel_sequence: 5
        timetagger_sum_channels: 0

    timetagger_slowcounter:
        module.Class: 'swabian_instruments.timetagger_counter.TimeTaggerCounter'
        timetagger_channel_apd_0: 0
        timetagger_channel_apd_1: 1
        timetagger_sum_channels: True

    timetagger_pixel_counter:
        module.Class: 'swabian_instruments.timetagger_pixel_counter.TimeTaggerPixelCounter'
        timetagger_channel_apd_0: 0
        timetagger_channel_apd_1: 1
        pixel_trigger: 2

    timetagger_odmr_counter:
        module.Class: 'swabian_instruments.timetagger_odmr_counter.TimeTaggerODMRCounter'
        timetagger_channel_apd_0: 0
        timetagger_channel_apd_1: 1
        cw_timetagger_channel_trigger: 6
        pulsed_timetagger_channel_trigger: 7

    timetagger_awg_odmr_counter:
        module.Class: 'swabian_instruments.timetagger_awg_odmr_counter.TimeTaggerODMRCounter'
        timetagger_channel_apd_0: 0
        timetagger_channel_apd_1: 1
        pulsed_timetagger_channel_trigger_start: 4 # RISING EDGE
        pulsed_timetagger_channel_trigger_stop: 13 # FALLING EDGE

    timetagger_autocorrelation:
        module.Class: 'swabian_instruments.timetagger_autocorrelation.TimeTaggerAutocorrelation'
        timetagger_channel_apd_0: 0
        timetagger_channel_apd_1: 1

    pi727scanner:
        module.Class: 'piezo.pi_piezo_controller.PIPiezoController'
        ipaddress : '192.168.0.8'
        ipport : 50000
        stages : ['S-330.8SH', 'S-330.8SH']
        scanner_position_ranges:
            - [0, 10e-6]
            - [0, 10e-6]
            - [0., 1e-4]
            - [0., 1.]
        x_scanner : '2'
        y_scanner : '1'
        controllername : "E-727"
        fine_scanning_mode: True # Required to prevent artefacts

    pi725scanner:
        module.Class: 'piezo.pi_piezo_controller.PIPiezoController'
        ipaddress: '192.168.0.16'
        ipport: 50000
        stages: ['P-733.3CD', 'P-733.3CD', 'P-733.3CD']
        scanner_position_ranges:
            - [0., 1.e-4]
            - [0., 1.e-4]
            - [2.5e-7, 1.e-5] # Interface slows down heavily under 250nm
            - [0., 1.]
        x_scanner: '1'
        y_scanner: '2'
        z_scanner: '3'
        controllername : "E-725"
        fine_scanning_mode: False

    mw_smf100a:
        module.Class: 'microwave.mw_source_smf100a.MicrowaveSMF'
        smf_visa_address: 'TCPIP0::192.168.0.6::inst0::INSTR'
        smf_timeout: 1000

    na_zvl6:
        module.Class: 'microwave.network_analyzer_zvl6.NetworkAnalyzerZVL6'
        zvl_visa_address: 'TCPIP::192.168.0.18::INSTR'

    heater:
        module.Class: 'RundS_power_supply_NGPX_70-5.Power_supply'
        gpib_address: 'GPIB0::17::INSTR' ## {'x': 'gpib0::15', 'y': 'gpib0::16', 'z': 'gpib0::17'}
        gpib_timeout: 30

    SMC_controller:
        module.Class: 'magnet.SMC_controller.SMC'

    awg_spectrum:
        module.Class: 'awg.spectrum_awg663.AWG663'
        awg_ip_address: 192.168.0.4
        timeout: 30
        waveform_folder: 'C:\\qudi-hira\\saved_pulsed_assets\\waveform'
        sequence_folder: 'C:\qudi-hira\saved_pulsed_assets\sequence'
        invert_channel: "d_ch2" # Invert switch channel

    laser_toptica:
        module.Class: 'laser.toptica_ibeam_laser.TopticaIBeamLaser'
        com_port: 'COM1'
        maxpower: 0.1
        maxcurrent: 0.246

    nanonis_coarse_motion:
        module.Class: 'piezo.nanonis_coarse_motion.NanonisCoarseMotion'
        labview_executable : "C:\\Program Files\\National Instruments\\LabVIEW 2018\\LabVIEW.exe"
        labview_progint_path : "C:\\Program Files\\National Instruments\\LabVIEW 2018\\user.lib\\Nanonis Prog Interface"
        sample_group : 0
        tip_group : 1

    nanonis_fine_scanner:
        module.Class: 'piezo.nanonis_fine_scanner.NanonisFineScanner'
        labview_executable: "C:\\Program Files\\National Instruments\\LabVIEW 2018\\LabVIEW.exe"
        labview_progint_path: "C:\\Program Files\\National Instruments\\LabVIEW 2018\\user.lib\\Nanonis Prog Interface"
        vi_casestruct_tcp_alpha : "test\\case_struct_tcp_alpha.vi"
        vi_folme_speed_set : "Scan\\Follow Me\\FolMe Speed Set.vi"
        vi_folme_speed_get : "Scan\\Follow Me\\FolMe Speed Get.vi"
        vi_xy_pos_set_fast : "Scan\\Follow Me\\XY-Pos Set - Fast.vi"
        vi_folme_stop_movement: "Scan\\Follow Me\\FolMe Stop Movement.vi"
        vi_xy_pos_get : "Scan\\XY-Pos Get.vi"
        scanner_position_ranges:
            - [0., 1.e-6]
            - [0., 1.e-6]
            - [0., 1.e-6]

    attocube_anc350:
        # Double check the controller numbers before using, not sure how it selects
        # which is first and second, perhaps USB?
        module.Class: 'piezo.anc350_piezo_controller.ANCController'
        dll_location : 'C:\\qudi-hira\\thirdparty\\attocube\\win64\\anc350v2.dll'
        sample_controller_number : 0
        tip_controller_number : 1

    lakeshore_224tm:
        module.Class: 'temperature.lakeshore_temperature_monitor.Lakeshore224TM'
        ip_address : '192.168.0.12'
        ip_port : 7777
        timeout : 2
        baseplate_channel : 'C1'
        tip_channel : 'A'
        magnet_channel : 'B'
        z_braid_channel: "C3"

    pfeiffer_tpg366:
        module.Class: 'pressure.pfeiffer_pressure_monitor.PfeifferTPG366'
        com_port : 'COM2'
        timeout : 2
        main_gauge_number : 1
        prep_gauge_number : 2
        back_gauge_number : 3

    twickenham_hdi:
        module.Class: 'hdi.twickenham_hdi.TwickenhamHDI'
        com_port : 'COM17'
        channel : 'P0' # Channel A (P0) or B (P1)
        meas_speed : 'M2' # Slow (M1), fast (M2) or continuous (M3) measurement
        max_depth : 550 # in mm

    powermeter:
        module.Class: 'powermeter.PM100D.PM100D'
        address: 'USB0::0x1313::0x8078::P0008676::INSTR'

    flip_beamsplitter:
        module.Class : 'switches.thorlabs_flipmount.ThorlabsFlipMount'
        serial: "37006263"

    qepro_spectrometer:
        module.Class : "spectrometer.oceanoptics_spectrometer.OceanOptics"
        spectrometer_serial: "QEP03720"

    nanonis_raster_scanner:
        module.Class: 'nanonis.nanonis_raster_scanner.NanonisRasterScanner'
        sync_filepath: 'C:\\qudi-hira\\hardware\\nanonis\\scanfile.txt'

    lakeshore_625smps:
        module.Class: 'sc_magnet.lakeshore_magnet_controller.Lakeshore625SMPS'
        magnet_COM_port_x : 'COM21'
        magnet_COM_port_y : 'COM20'
        magnet_COM_port_z : 'COM15'
        magnet_waitingtime_seconds : 0.1
        magnet_x_constr_tesla : 0.01
        magnet_y_constr_tesla : 0.01
        magnet_z_constr_tesla : 0.02
        magnet_rho_constr_tesla : 0.02

    lakeshore_625:
        module.Class: 'sc_magnet.lakeshore625_magnet_controller.Lakeshore625'
        magnet_COM_port_x: 'COM21'
        magnet_COM_port_y: 'COM20'
        magnet_COM_port_z: 'COM15'
        magnet_waitingtime_seconds: 0.3
        magnet_x_constr_tesla: 0.01
        magnet_y_constr_tesla: 0.01
        magnet_z_constr_tesla: 0.02

logic:
    counterlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'timetagger_slowcounter'
            savelogic: 'savelogic'

    pixelcounterlogic:
        module.Class: 'pixel_counter_logic.PixelCounterLogic'
        connect:
            counter: 'timetagger_pixel_counter'
            savelogic: 'savelogic'

    spectrometerlogic:
        module.Class: 'spectrometer_logic.SpectrometerLogic'
        connect:
            spectrometer: 'qepro_spectrometer'
            savelogic: 'savelogic'
            fitlogic: 'fitlogic'

    scannerlogic:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'scanner_slow_counter_interfuse'
            savelogic: 'savelogic'

    scannerlogic_ambient:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'scanner_slow_counter_interfuse_ambient'
            savelogic: 'savelogic'

    nanonisscannerlogic:
        module.Class: 'nanonis_confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'nanonisscanner_slow_counter_interfuse'
            savelogic: 'savelogic'

    scanner_slow_counter_interfuse:
        module.Class: 'interfuse.confocal_scanner_slow_counter_interfuse.SlowCounterScannerInterfuse'
        clock_frequency: 100
        connect:
            confocalscanner1: 'pi727scanner'
            counter1: 'timetagger_slowcounter'

    scanner_slow_counter_interfuse_ambient:
        module.Class: 'interfuse.confocal_scanner_slow_counter_interfuse.SlowCounterScannerInterfuse'
        clock_frequency: 100
        connect:
            confocalscanner1: 'pi725scanner'
            counter1: 'timetagger_slowcounter'

    nanonisscanner_slow_counter_interfuse:
        module.Class: 'interfuse.nanonis_scanner_slow_counter_interfuse.SlowCounterScannerInterfuse'
        connect:
            confocalscanner1: 'nanonis_fine_scanner'
            counter1: 'timetagger_slowcounter'

    laserlogic:
        module.Class: 'laser_logic.LaserLogic'
        query_interval: 1000
        connect:
            laser: 'laser_toptica'

    temperaturemonitorlogic:
        module.Class: 'temperature_monitor_logic.TemperatureMonitorLogic'
        query_interval: 10000
        connect:
            tm: 'lakeshore_224tm'
            savelogic: 'streamsavelogic'

    pressuremonitorlogic:
        module.Class: 'pressure_monitor_logic.PressureMonitorLogic'
        query_interval: 10000
        connect:
            pm: 'pfeiffer_tpg366'
            savelogic: 'streamsavelogic'

    depthindicatorlogic:
        module.Class: 'depth_indicator_logic.DepthIndicatorLogic'
        connect:
            hdi: 'twickenham_hdi'

    powermeterlogic:
        module.Class: 'powermeter_logic.PowermeterLogic'
        calibration_param_uhv: 3.9
        calibration_param_rt: 4.6
        connect:
            pm: 'powermeter'

    awgcwodmrlogic:
        module.Class: 'cw_odmr_awg_logic.AwgCwODMRLogic'
        scanmode: 'LIST'
        connect:
            odmrcounter: 'timetagger_awg_odmr_counter'
            fitlogic: 'fitlogic'
            microwave1: 'mw_smf100a'
            savelogic: 'savelogic'
            taskrunner: 'tasklogic'
            pulsegenerator: 'awg_spectrum'

    awgpulsedodmrlogic:
        module.Class: 'pulsed_odmr_awg_logic.AwgPulsedODMRLogic'
        # List mode does not currently work
        scanmode: 'LIST'
        connect:
            odmrcounter: 'timetagger_awg_odmr_counter'
            fitlogic: 'fitlogic'
            microwave1: 'mw_smf100a'
            savelogic: 'savelogic'
            taskrunner: 'tasklogic'
            pulsegenerator: 'awg_spectrum'

    awgodmrlogic_noiq:
        module.Class: 'odmr_awg_logic_no_iq.AwgODMRLogicNoIQ'
        scanmode: 'SWEEP'
        connect:
            odmrcounter: 'timetagger_awg_odmr_counter'
            fitlogic: 'fitlogic'
            microwave1: 'mw_smf100a'
            savelogic: 'savelogic'
            taskrunner: 'tasklogic'
            pulsegenerator: 'awg_spectrum'
            laserlogic: 'laserlogic'

    rasterawgpulsedodmrlogic:
        module.Class: 'raster_pulsed_odmr_awg_logic.RasterAwgPulsedODMRLogic'
        # List mode does not currently work
        scanmode: 'LIST'
        connect:
            odmrcounter: 'timetagger_awg_odmr_counter'
            scanner: 'nanonis_raster_scanner'
            fitlogic: 'fitlogic'
            microwave1: 'mw_smf100a'
            savelogic: 'savelogic'
            taskrunner: 'tasklogic'
            pulsegenerator: 'awg_spectrum'

    cwodmrlogic:
        module.Class: 'cw_odmr_logic.CwODMRLogic'
        # List mode does not currently work
        scanmode: 'SWEEP'
        connect:
            odmrcounter: 'timetagger_odmr_counter'
            odmrclock: 'nicard'
            fitlogic: 'fitlogic'
            microwave1: 'mw_smf100a'
            savelogic: 'savelogic'
            taskrunner: 'tasklogic'

    laserscanner:
        module.Class: 'laser_scanner_logic.LaserScannerLogic'
        connect:
            confocalscanner1: 'nicard'
            savelogic: 'savelogic'

    scanner_tilt_interfuse:
        module.Class: 'interfuse.scanner_tilt_interfuse.ScannerTiltInterfuse'
        connect:
            confocalscanner1: 'scanner_slow_counter_interfuse'

    magnet_control_logic:
        module.Class: 'magnet_control_logic.MagnetControlLogic'
        connect:
            counter: 'counterlogic'
            magnetstage: 'lakeshore_625smps'
            savelogic: 'savelogic'
            fitlogic: 'fitlogic'

    magnet_logic:
        module.Class: 'magnet_logic.MagnetLogic'
        connect:
            magnetstage: 'lakeshore_625smps'
            optimizerlogic: 'optimizerlogic'
            counterlogic: 'counterlogic'
            odmrlogic: 'awgodmrlogic_noiq'
            savelogic: 'savelogic'
            scannerlogic: 'scannerlogic'
            traceanalysis: 'trace_analysis_logic'
            gatedcounterlogic: 'gatedcounterlogic'
            sequencegeneratorlogic: 'sequencegeneratorlogic'

    scmagnetlogic:
        module.Class: 'sc_magnet_logic.SCMagnetLogic'
        query_interval: 500
        connect:
            magnet_controller: 'lakeshore_625'
            savelogic: 'streamsavelogic'

    trace_analysis_logic:
        module.Class: 'trace_analysis_logic.TraceAnalysisLogic'
        connect:
            counterlogic1: 'gatedcounterlogic'
            savelogic: 'savelogic'
            fitlogic: 'fitlogic'

    gatedcounterlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'counterlogic'
            savelogic: 'savelogic'

    sequencegeneratorlogic:
        module.Class: 'pulsed.sequence_generator_logic.SequenceGeneratorLogic'
        #assets_storage_path: 'C:/Users/<username>/saved_pulsed_assets'
        #additional_predefined_methods_path: 'C:\\Custom_dir'  # optional, can also be lists on several folders
        #additional_sampling_functions_path: 'C:\\Custom_dir'  # optional, can also be lists on several folders
        #overhead_bytes: 4294967296  # Not properly implemented yet
        connect:
            pulsegenerator: 'awg_spectrum'

    qdplotlogic:
        module.Class: 'qdplot_logic.QDPlotLogic'
        default_plot_number: 3
        connect:
            save_logic: 'savelogic'
            fit_logic: 'fitlogic'

    pulsedmasterlogic:
        module.Class: 'pulsed.pulsed_master_logic.PulsedMasterLogic'
        connect:
            pulsedmeasurementlogic: 'pulsedmeasurementlogic'
            sequencegeneratorlogic: 'sequencegenerator'

    sequencegenerator:
        module.Class: 'pulsed.sequence_generator_logic.SequenceGeneratorLogic'
        assets_storage_path: 'C:\\qudi-hira\\saved_pulsed_assets'
        connect:
            pulsegenerator: 'awg_spectrum'

    pulseextraction:
        module.Class: 'pulsed.pulse_extractor.PulseExtractor'

    pulseanalysis:
        module.Class: 'pulsed.pulse_analyzer.PulseAnalyzer'
        connect:
            fastcounter: 'timetagger_fastcounter'
            pulseextractionlogic: 'pulseextraction'
            sequencegenerator: 'sequencegenerator'
            pulsegenerator: 'awg_spectrum'

    pulsedmeasurementlogic:
        module.Class: 'pulsed.pulsed_measurement_logic.PulsedMeasurementLogic'
        connect:
            fitlogic: 'fitlogic'
            savelogic: 'savelogic'
            fastcounter: 'timetagger_fastcounter'
            microwave: 'mw_smf100a'
            laserlogic: 'laserlogic'
            pulsegenerator: 'awg_spectrum'

    optimizerlogic:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'scanner_slow_counter_interfuse'
            fitlogic: 'fitlogic'

    optimizerlogic_ambient:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'scanner_slow_counter_interfuse_ambient'
            fitlogic: 'fitlogic'

    nanonisoptimizer:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'nanonisscanner_slow_counter_interfuse'
            fitlogic: 'fitlogic'

    poimanager_ambient:
        module.Class: 'poi_manager_logic.PoiManagerLogic'
        connect:
            scannerlogic: 'scannerlogic_ambient'
            optimizerlogic: 'optimizerlogic_ambient'
            savelogic: 'savelogic'
            # odmrlogic: 'awgodmrlogic_noiq'
            # pulsedmeasurementlogic: 'pulsedmeasurementlogic'

    poimanager:
        module.Class: 'poi_manager_logic.PoiManagerLogic'
        connect:
            scannerlogic: 'scannerlogic'
            optimizerlogic: 'optimizerlogic'
            savelogic: 'savelogic'
            odmrlogic: 'awgodmrlogic_noiq'
            pulsedmeasurementlogic: 'pulsedmeasurementlogic'

    fitlogic:
        module.Class: 'fit_logic.FitLogic'

    savelogic:
        module.Class: 'save_logic.SaveLogic'
        win_data_directory: 'Z:\\Data\\20230306_QR01B-J3-E5_PumpDown'
        unix_data_directory: '/$HOME/'
        log_into_daily_directory: True

    streamsavelogic:
        module.Class: 'stream_save_logic.StreamSaveLogic'
        win_data_directory: 'Z:\\Data\\20230306_QR01B-J3-E5_PumpDown'
        unix_data_directory: '/$HOME/'
        log_into_daily_directory: True

    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True

    tasklogic:
        module.Class: 'taskrunner.TaskRunner'
        tasks:
            scannerLocationRefocus:
                module: 'refocus'
                pausetasks:
                  - scan
                  - odmr
                needsmodules:
                    optimizer: 'optimizerlogic'

    autocorrelationlogic:
        module.Class: 'autocorrelation_logic.AutocorrelationLogic'
        connect:
            autocorrelator: 'timetagger_autocorrelation'
            savelogic: 'savelogic'

    nv_calculator_logic:
        module.Class: 'nv_calculator_logic.NVCalculatorLogic'
        connect:
            odmr: 'odmrlogic'
            pulsed: 'pulsedmeasurementlogic'

gui:
    tray:
        module.Class: 'trayicon.TrayIcon'

    man:
        module.Class: 'manager.managergui.ManagerGui'

    countergui:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counterlogic'

    lasergui:
        module.Class: 'laser.laser.LaserGUI'
        connect:
            laserlogic: 'laserlogic'

    powermetergui:
        module.Class: 'powermeter.powermeter.PowermeterGUI'
        connect:
            pm_logic: 'powermeterlogic'

    autocorrelationgui:
        module.Class: 'autocorrelation.autocorrelationgui.AutocorrelationGui'
        connect:
            autocorrelation1: 'autocorrelationlogic'

    confocalgui:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'scannerlogic'
            savelogic: 'savelogic'
            optimizerlogic1: 'optimizerlogic'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02

    poimanagergui:
        module.Class: 'poimanager.poimangui.PoiManagerGui'
        connect:
            poimanagerlogic: 'poimanager'
            scannerlogic: 'scannerlogic'

    pulsedmeasurement:
        module.Class: 'pulsed.pulsed_maingui.PulsedMeasurementGui'
        connect:
            pulsedmasterlogic: 'pulsedmasterlogic'

    spectrometer:
        module.Class: 'spectrometer.spectrometergui.SpectrometerGui'
        connect:
            spectrumlogic: 'spectrometerlogic'

    nanonisscannergui:
        module.Class: 'confocal_nanonis.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'nanonisscannerlogic'
            savelogic: 'savelogic'
            optimizerlogic1: 'nanonisoptimizer'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02

    confocalgui_ambient:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'scannerlogic_ambient'
            savelogic: 'savelogic'
            optimizerlogic1: 'optimizerlogic_ambient'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02

    poimanagergui_ambient:
        module.Class: 'poimanager.poimangui.PoiManagerGui'
        connect:
            poimanagerlogic: 'poimanager_ambient'
            scannerlogic: 'scannerlogic_ambient'

    temperaturemonitorgui:
        module.Class: 'temperature_monitor.temperature_monitor.TemperatureMonitorGUI'
        connect:
            tmlogic: 'temperaturemonitorlogic'

    pressuremonitorgui:
        module.Class: 'pressure_monitor.pressure_monitor.PressureMonitorGUI'
        connect:
            pmlogic: 'pressuremonitorlogic'

    depthindicatorgui:
        module.Class: 'hdi.helium_depth_indicator.DepthIndicatorGUI'
        connect:
            hdi_logic: 'depthindicatorlogic'

    magnet:
        module.Class: 'magnet.magnet_gui.MagnetGui'
        connect:
            magnetlogic1: 'magnet_logic'
            savelogic: 'savelogic'

    scmagnetgui:
        module.Class: 'sc_magnet.sc_magnet.SCMagnetGUI'
        connect:
            mclogic: 'scmagnetlogic'

    cwodmrgui:
        module.Class: 'cwodmr.cwodmr_gui.CwODMRGui'
        connect:
            odmrlogic1: 'cwodmrlogic'
            savelogic: 'savelogic'

    awgcwodmrgui:
        module.Class: 'awgcwodmr.awgcwodmr_gui.AwgCwODMRGui'
        connect:
            odmrlogic1: 'awgcwodmrlogic'
            savelogic: 'savelogic'

    awgpulsedodmrgui:
        module.Class: 'awgpulsedodmr.awgpulsedodmr_gui.AwgPulsedODMRGui'
        connect:
            odmrlogic1: 'awgpulsedodmrlogic'
            savelogic: 'savelogic'

    awgodmrgui_noiq:
        module.Class: 'awgodmr.awgodmr_gui.AwgODMRGui'
        connect:
            odmrlogic1: 'awgodmrlogic_noiq'
            savelogic: 'savelogic'

    rasterawgpulsedodmrgui:
        module.Class: 'rasterawgpulsedodmr.awgpulsedodmr_gui.AwgPulsedODMRGui'
        connect:
            odmrlogic1: 'rasterawgpulsedodmrlogic'
            savelogic: 'savelogic'

    qdplotter:
        module.Class: 'qdplotter.qdplotter_gui.QDPlotterGui'
        pen_color_list: ['b', 'y', 'm', 'g']
        connect:
            qdplot_logic: 'qdplotlogic'

    nv_calculator_gui:
        module.Class: 'nv_calculator.nv_calculatorgui.NVCalculatorGui'
        connect:
            nv_calculatorlogic: 'nv_calculator_logic'
